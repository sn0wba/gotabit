syntax = "proto3";
package gotabit.sendMsg.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "gotabit/sendMsg/v1beta1/sendMsg.proto";

option go_package = "github.com/gotabit/gotabit/x/sendMsg/types";

// Query creates service with sendMsg as RPC
service Query {

  // SentMessages returns messages sent from user
  rpc SentMessages(SentMessagesRequest) returns (SentMessagesResponse) {
    option (google.api.http).get = "/gotabit/sendMsg/v1beta1/sent/{address}";
  }

  // ReceivedMessages returns messages received by user
  rpc ReceivedMessages(ReceivedMessagesRequest) returns (ReceivedMessagesResponse) {
    option (google.api.http).get = "/gotabit/sendMsg/v1beta1/received/{address}";
  }
}

// SentMessagesRequest is request type for the Query/SentMessages RPC method
message SentMessagesRequest { string address = 1; }

// SentMessagesResponse is response type for the Query/SentMessages RPC method
message SentMessagesResponse { repeated gotabit.sendMsg.v1beta1.SendMsg messages = 1; }

// ReceivedMessagesRequest is request type for the Query/ReceivedMessages RPC method
message ReceivedMessagesRequest { string address = 1; }

// ReceivedMessagesResponse is response type for the Query/ReceivedMessages RPC method
message ReceivedMessagesResponse { repeated gotabit.sendMsg.v1beta1.SendMsg messages = 1; }
